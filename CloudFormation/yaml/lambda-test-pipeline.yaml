AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CodeCommitRepositoryName:
    Type: String
    MinLength: 1
  SourceBranch:
    Type: String
    Default: "master"
    MinLength: 1
  DeployEnvironmentName:
    Type: String
    Default: "development"
    AllowedValues: [development, staging, production]
  PipelinePrefix:
    Type: String
    MinLength: 1
  BuildArtifactBucketName:
    Type: String
    MinLength: 1
  CodeBuildServiceRoleArn:
    Type: String
    MinLength: 1
  PipelineExecutionRoleArn:
    Type: String
    MinLength: 1
  CloudFormationExecutionRoleArn:
    Type: String
    MinLength: 1
  TemplateDeployFilename:
    Type: String
    Default: lambda-deploy.yaml
    MinLength: 1
  Loglevel:
    Type: String
    Default: "INFO"
    AllowedValues: ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"]
  LogRetentionInDays:
    Type: String
    Default: "3"
    AllowedValues: ["1", "3", "5", "7", "14", "30", "60", "90", "120", "150", "180", "365", "400", "545", "731", "1827", "2192", "2557", "2922", "3288", "3653"]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic config."
        Parameters:
          - PipelinePrefix
          - CodeCommitRepositoryName
          - SourceBranch
          - DeployEnvironmentName
          - TemplateDeployFilename
      - Label:
          default: "Build resources."
        Parameters:
          - BuildArtifactBucketName
          - CodeBuildServiceRoleArn
          - PipelineExecutionRoleArn
          - CloudFormationExecutionRoleArn
      - Label:
          default: "App config."
        Parameters:
          - Loglevel
          - LogRetentionInDays

Resources:

  # **********************************
  # CodeBuild
  # **********************************

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-buildproject"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactBucketName
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Source:
        Type: CODEPIPELINE

  # **********************************
  # Pipeline
  # **********************************

  LambdaTestPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactBucketName
        Type: S3
      Name: !Sub ${AWS::StackName}
      RoleArn: !Ref PipelineExecutionRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommitRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Sub "${CodeCommitRepositoryName}"
                BranchName: !Ref SourceBranch
              OutputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: TemplateZip
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Ref CloudFormationExecutionRoleArn
                StackName: !Sub "${PipelinePrefix}-${DeployEnvironmentName}"
                ChangeSetName: !Sub "${PipelinePrefix}-ChangeSet-${DeployEnvironmentName}"
                TemplatePath: !Sub "TemplateZip::${TemplateDeployFilename}"
                Capabilities: "CAPABILITY_IAM,CAPABILITY_NAMED_IAM"
                ParameterOverrides: !Sub |
                  {
                    "PipelinePrefix": "${PipelinePrefix}",
                    "DeployEnvironmentName": "${DeployEnvironmentName}",
                    "Loglevel": "${Loglevel}",
                    "LogRetentionInDays": "${LogRetentionInDays}"
                  }
              InputArtifacts:
                - Name: TemplateZip
              RunOrder: 1
            - Name: DeploymentApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Ref CloudFormationExecutionRoleArn
                StackName: !Sub "${PipelinePrefix}-${DeployEnvironmentName}"
                ChangeSetName: !Sub "${PipelinePrefix}-ChangeSet-${DeployEnvironmentName}"
                OutputFileName: Outputs.json
              OutputArtifacts:
                - Name: Outputs
              RunOrder: 3
